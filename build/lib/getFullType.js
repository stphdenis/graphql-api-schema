"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFullType = void 0;
const getTypeRefs_1 = require("./getTypeRefs");
const getInputValues_1 = require("./getInputValues");
const getFields_1 = require("./getFields");
const getEnumValues_1 = require("./getEnumValues");
function getFullType(type) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
    const schema = {};
    schema.kind = type.kind;
    schema.name = type.name;
    schema.description = (_a = type.description) !== null && _a !== void 0 ? _a : undefined;
    const fields = getFields_1.getFields(type.fields);
    schema.fields = (_b = fields.fields) !== null && _b !== void 0 ? _b : {};
    schema.fieldList = (_c = fields.fieldList) !== null && _c !== void 0 ? _c : [];
    const inputFields = getInputValues_1.getInputValues(type.inputFields);
    schema.inputFields = (_d = inputFields.inputValues) !== null && _d !== void 0 ? _d : {};
    schema.inputFieldList = (_e = inputFields.inputList) !== null && _e !== void 0 ? _e : [];
    const interfaces = getTypeRefs_1.getTypeRefs(type.interfaces);
    schema.interfaces = (_f = interfaces.typeRefs) !== null && _f !== void 0 ? _f : {};
    schema.interfaceList = (_g = interfaces.typeRefList) !== null && _g !== void 0 ? _g : [];
    const enumValues = getEnumValues_1.getEnumValues(type.enumValues);
    schema.enumValues = (_h = enumValues.enumValues) !== null && _h !== void 0 ? _h : {};
    schema.enumList = (_j = enumValues.enumList) !== null && _j !== void 0 ? _j : [];
    const possibleTypes = getTypeRefs_1.getTypeRefs(type.possibleTypes);
    schema.possibleTypes = (_k = possibleTypes.typeRefs) !== null && _k !== void 0 ? _k : {};
    schema.possibleTypeList = (_l = possibleTypes.typeRefList) !== null && _l !== void 0 ? _l : [];
    return schema;
}
exports.getFullType = getFullType;
